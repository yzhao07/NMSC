first_sample = first_sample[order(match(first_sample$clinical.response,c("Responder","Nonresponder"))),]
dat = dat[rownames(first_sample),]
rownames(dat) = first_sample$patient_rename
anncolo_all = list(group = c("Nonresponder"="#3E4A7B","Responder" ="#A94643"))
ann_col=data.frame(group=first_sample$clinical.response)
rownames(ann_col)=rownames(dat)
nrow(ann_col[ann_col$group =="Clinical Benefit",])
dat=as.data.frame(scale(dat))
bk1 <- c(seq(floor(min(dat)),0,by=0.01))
bk2 <- c(seq(0,ceiling(max(dat)),by=0.01))
dat = dat[,1:(ncol(dat)-1)]
colnames(dat) = gsub('.c_.+.f_','.f_',colnames(dat))
colnames(dat) = gsub("k_Bacteria.","",colnames(dat))
pheatmap(t(dat),cellheight = 12,cellwidth = 12,cluster_rows = T,
annotation_col = ann_col,fontsize = 12,
annotation_names_row=FALSE,annotation_names_col = FALSE,
gaps_col = c(nrow(first_sample[first_sample$clinical.response == unique(first_sample$clinical.response)[1],])),
annotation_colors = anncolo_all,
cluster_cols = F,show_colnames=T,annotation_legend = FALSE,
color = c(colorRampPalette(colors = c("navy","SteelBlue","white"))(length(bk1)),
colorRampPalette(colors = c("white","orange","red"))(length(bk2))),
)->y
D<-plot_grid(y$gtable)
Fig1 = ggarrange( ggarrange(arm_plot2,ncol = 2,widths = c(1,0.2)),ggarrange(pcall,pc1,pc2,pc3,nrow = 1,ncol =4,widths=c(1,1,1,1.48)),D,
nrow = 3,heights  = c(1.4,1,1),labels=c("A","B","C"))
Fig1
rm(list=ls())
library(ggplot2)
library(vegan)
library(permute)
library(lattice)
library(plyr)
library(getopt)
library(ggfortify)
library(ade4)
library(ggpubr)
library(pheatmap)
library(cowplot)
library(reshape2)
library(ggrepel)
color=c("#A94643","#3E4A7B","#BCBDB8")
group = read.csv("../analysis/A01.1-add-meta/non-melanoma-cohort-sample_10_10.csv",check.names = F)
group = group[order(group$days.sample.collect),]
group = group[order(match(group$patient_rename,unique(group$patient_rename))),]
group = group[order(match(group$clinical.response,c("Responder","Nonresponder","Stable_Disease","Other"))),]
group = group[order(match(group$Tumor,unique(group$Tumor))),]
ID = unique(group$patient_rename)
rownames(group)=group$sample_id
first_sample = NULL
for(i in ID){
tmp = group[group$patient_rename == i,]
tmp = tmp[tmp$days.sample.collect == min(tmp$days.sample.collect),]
first_sample = rbind(first_sample,tmp)
}
first_sample = as.data.frame(first_sample[first_sample$days.sample.collect < 180,])
first_sample = first_sample[first_sample$Tumor == "SCC",]
dat = read.csv("../Analysis/differential_analysis/16s_seq/SCC/differential_genus_species.csv",row.names = 1)
dat = as.data.frame(t(dat))
first_sample = first_sample[order(first_sample$patient_rename),]
first_sample = first_sample[first_sample$clinical.response %in% c("Responder","Nonresponder"),]
first_sample = first_sample[order(match(first_sample$clinical.response,c("Responder","Nonresponder"))),]
dat = dat[first_sample$patient_rename,]
rownames(dat) = first_sample$patient_rename
anncolo_all = list(group = c("Nonresponder"="#3E4A7B","Responder" ="#A94643"))
ann_col=data.frame(group=first_sample$clinical.response)
rownames(ann_col)=rownames(dat)
nrow(ann_col[ann_col$group =="Responder",])
dat=as.data.frame(scale(dat))
bk1 <- c(seq(floor(min(dat)),0,by=0.01))
bk2 <- c(seq(0,ceiling(max(dat)),by=0.01))
pheatmap(t(dat),cellheight = 10,cellwidth = 11,cluster_rows = F,
annotation_col = ann_col,fontsize = 11,
annotation_names_row=FALSE,annotation_names_col = FALSE,annotation_legend = TRUE,
gaps_col = c(nrow(first_sample[first_sample$clinical.response == unique(first_sample$clinical.response)[1],])),
gaps_row = c(3,3),
annotation_colors = anncolo_all,
cluster_cols = F,show_colnames=T,
color = c(colorRampPalette(colors = c("navy","SteelBlue","white"))(length(bk1)),
colorRampPalette(colors = c("white","orange","red"))(length(bk2))),
)->y
A<-plot_grid(y$gtable)
dat=read.csv("../Analysis/A01.1-add-meta/jhmi-sears-non-melanoma.picrust2.pw.txt",sep="\t",row.names = 1,check.names = F)
differential = read.csv("../Analysis/differential_analysis/16s_seq/SCC/picrust2.pw/differential.txt",sep="\t",row.names = 1,check.names = F)
differential = na.omit(differential)
differential =differential[order(differential$log2_FC),]
description = read.csv("../Analysis/A01.1-add-meta/picrust2_pw_description.txt",sep="\t",check.names = F,header=F)
rownames(description) = gsub("-","_",description$V1)
description = description[rownames(differential),]
dat = dat[,rownames(differential)]
colnames(dat) = paste(description$V1,description$V2,sep=": ")
first_sample = first_sample[order(first_sample$patient_rename),]
first_sample = first_sample[order(match(first_sample$clinical.response,c("Responder","Nonresponder"))),]
dat = dat[rownames(first_sample),]
rownames(dat) = first_sample$patient_rename
colnames(dat) = gsub('.c_.+.f','.f',colnames(dat))
colnames(dat) =  gsub('k_Bacteria.','',colnames(dat))
pw = dat
anncolo_all = list(group = c("Nonresponder"="#3E4A7B","Responder" ="#A94643"))
ann_col=data.frame(group=first_sample$clinical.response)
rownames(ann_col)=rownames(dat)
nrow(ann_col[ann_col$group =="Responder",])
dat=as.data.frame(scale(dat))
bk1 <- c(seq(floor(min(dat)),0,by=0.01))
bk2 <- c(seq(0,ceiling(max(dat)),by=0.01))
pheatmap(t(dat),cellheight = 10,cellwidth = 11,cluster_rows = F,
annotation_col = ann_col,fontsize = 11,
annotation_names_row=FALSE,annotation_names_col = FALSE,annotation_legend = TRUE,
gaps_col = c(nrow(first_sample[first_sample$clinical.response == "Responder",])),
annotation_colors = anncolo_all,gaps_row = c(8),
cluster_cols = F,show_colnames=T,
color = c(colorRampPalette(colors = c("navy","SteelBlue","white"))(length(bk1)),
colorRampPalette(colors = c("white","orange","red"))(length(bk2))),
)->y
B<-plot_grid(y$gtable)
plotPath = function(pathway_result){
colnames(pathway_result) = c("pathway", "Total.Cmpd","Hits" , "Raw.p","-log10(p)" ,"Holm.adjust","FDR" ,"Impact" )
plot_pathway = ggplot(pathway_result,aes(x=Impact, y=`-log10(p)`))+geom_point(aes(color=`-log10(p)`,size=Impact))+
scale_colour_gradient(limits=c(0, round(max(pathway_result$`-log10(p)`),0)), low="red",high = "yellow") +
geom_text_repel(data=subset(pathway_result, `-log10(p)` > 1 & Impact > 0),aes(Impact,`-log10(p)`,label=pathway),hjust=-0.2,vjust=-1)+ggtitle(" ")+
theme_bw()+ylab("-log10(pvalue)")+theme(
axis.text=element_text(size=12,colour="black"),text=element_text(size=12,colour="black"),
plot.title =element_text(size=12,colour="black",hjust = 0.5),
axis.title = element_text(size=12,colour="black"))
}
pathway_result= read.csv("../analysis/differential_analysis/metabolite/Diff_metabolite_pathway/result/pathway_results.csv")
colnames(pathway_result) = c("pathway", "Total.Cmpd","Hits" , "Raw.p","-log10(p)" ,"Holm.adjust","FDR" ,"Impact" )
pathway_result$`-log10(p)` = as.numeric(pathway_result$`-log10(p)`)
pathway_result$Impact = as.numeric(pathway_result$Impact)
plot_b_pathway = ggplot(pathway_result,aes(x=Impact, y=`-log10(p)`))+geom_point(aes(color=`-log10(p)`,size=Impact))+
scale_colour_gradient(limits=c(0, round(max(pathway_result$`-log10(p)`),0)), low="red",high = "yellow") +
geom_text_repel(data=subset(pathway_result, `-log10(p)` > 1 & Impact > 0),aes(Impact,`-log10(p)`,label=pathway),hjust=-0.2,vjust=-1)+ggtitle(" ")+
theme_bw()+ylab("-log10(pvalue)")+
theme(
axis.text=element_text(size=12,colour="black"),text=element_text(size=12,colour="black"),
plot.title =element_text(size=12,colour="black",hjust = 0.5),
axis.title = element_text(size=12,colour="black"))
boxplot <- function(name_map,input){
name_map = name_map[name_map$Pathway !="",]
input = input[,c("group",name_map$Query)]
range_value = NULL
for(i in 2:ncol(input)){
range_value=c(range_value,list(c(range(input[,i])[1],range(input[,i])[2]*1.3)))
}
plot = melt(input)
colnames(plot) = c("response","variable","value")
plot$response = factor(plot$response,levels = c("Responder","Nonresponder"))
a = ggplot(plot, aes(x =response, y =value ,fill=response))+
geom_boxplot(width=0.4) +# geom_point()+
scale_fill_manual(values=c("Nonresponder"="#3E4A7B","Responder" ="#A94643"))+ scale_colour_manual(values=c("Nonresponder"="#3E4A7B","Responder" ="#A94643"))+
# statistical analysis
stat_compare_means(comparisons =list(c("Nonresponder","Responder")),method = 't.test',size=4)+
theme_bw()+xlab("")+ylab("")+ggtitle(" ")+scale_y_continuous(expand = expansion(mult = c(0, 0.1)))+
facet_wrap(~variable, scales = "free",ncol=5)+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),legend.position = "None",
axis.text=element_text(size=12,colour="black"),text=element_text(size=12,colour="black"),
plot.title =element_text(size=12,colour="black",hjust = 0.5),
axis.title = element_text(size=12,colour="black"),axis.text.x = element_blank(),axis.ticks.x = element_blank())
return(a)
}
name_map = read.csv("../analysis/differential_analysis/metabolite/Diff_metabolite_pathway/result/name_map.csv")
input = read.csv("../analysis/differential_analysis/metabolite/Diff_metabolite_pathway/result/input_pathway_diff_metabo.csv",row.names = 1,check.names = F)
boxplot_diff = boxplot(name_map,input)
all = ggarrange( A,B,plot_b_pathway,boxplot_diff,ncol = 2,nrow= 2, widths  =c(1,1.5),heights = c(1.3,1),labels=c("A","B","C","D"))
all
rm(list=ls())
library(ggplot2)
library(plyr)
library(ggpubr)
library(dplyr)
library(reshape2)
library(stringr)
group = read.csv("../Analysis/A01.1-add-meta/non-melanoma-cohort-sample_10_10.csv")
group = group[order(group$days.sample.collect),]
group = group[order(match(group$patient_rename,unique(group$patient_rename))),]
group = group[order(match(group$clinical.response,c("Responder","Nonresponder","Stable_Disease","Other"))),]
group = group[order(match(group$Tumor,unique(group$Tumor))),]
group = group[group$clinical.response %in% c("Responder","Nonresponder"),]
group$time_group = NA
for (i in 1:nrow(group)){
if (group[i,"days.sample.collect"] < 180){
group[i,"time_group"] = "<180 days"
}
else if (group[i,"days.sample.collect"] >=180 & group[i,"days.sample.collect"]< 360){
group[i,"time_group"] = "180-360 days"
}
else if (group[i,"days.sample.collect"] >= 360){
group[i,"time_group"] = ">=360 days"
}}
color2 = c("#FC8002","#4995C6","#369F2D")
alpha_diversity=read.csv("../Analysis/A01.1-add-meta/jhmi-sears-non-melanoma.alpha-diversity.txt",sep="\t",row.names = 1,check.names = F)
clinical_benefit_group = group[group$clinical.response == "Responder",]
alpha_diversity=alpha_diversity[clinical_benefit_group$sample_id,]
alpha_diversity$Treatment_Duration = factor(clinical_benefit_group$time_group,levels=c("<180 days","180-360 days",">=360 days"))
alpha_diversity$ICI_response = factor(clinical_benefit_group$clinical.response)
format = theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text=element_text(size=12,colour="black"),text=element_text(size=12,colour="black"),
axis.title = element_text(size=12,colour="black"),plot.title = element_text(size = 12),
axis.ticks.x = element_blank(),legend.position = "none",
axis.text.x = element_blank())
p1 = ggplot(alpha_diversity, aes(x =Treatment_Duration, y = shannon,fill=Treatment_Duration))+scale_fill_manual(values=color2)+
geom_boxplot(width=0.4,show.legend = FALSE) +
#geom_point(position = position_jitter(0.1),aes(shape=ICI_response))scale_shape_manual(values = c(19,1))+
geom_point(position = position_jitter(0.1))+
stat_summary(fun=median,geom='crossbar',size=0.6,width=0.2)+
stat_compare_means(comparisons =list(c("<180 days","180-360 days"),c("<180 days",">=360 days"),c(">=360 days","180-360 days")),method = 'wilcox.test',size=4)+
coord_cartesian(ylim = c(min(alpha_diversity$shannon),max(alpha_diversity$shannon)*1.3))+
theme_bw()+xlab("")+ggtitle("Shannon Index")+ylab("")+format
p2 = ggplot(alpha_diversity, aes(x =Treatment_Duration, y = simpson_reciprocal,fill=Treatment_Duration))+scale_fill_manual(values=color2)+
geom_boxplot(width=0.4,show.legend = FALSE) +
geom_point(position = position_jitter(0.1))+
stat_summary(fun=median,geom='crossbar',size=0.6,width=0.2)+
stat_compare_means(comparisons =list(c("<180 days","180-360 days"),c("<180 days",">=360 days"),c(">=360 days","180-360 days")),method = 'wilcox.test',size=4)+
coord_cartesian(ylim = c(min(alpha_diversity$simpson_reciprocal),max(alpha_diversity$simpson_reciprocal)*1.3))+
theme_bw()+xlab("")+ggtitle("Simpson_reciprocal")+ylab("")+format
#ggsave(p2,file="./squamous/baseline_alpha_diversity_simpson_reciprocal.pdf", width=4, height=3.5)
p3 = ggplot(alpha_diversity, aes(x =Treatment_Duration, y = chao1,fill=Treatment_Duration))+scale_fill_manual(values=color2)+
geom_boxplot(width=0.4,show.legend = FALSE) +
geom_point(position = position_jitter(0.1))+
stat_summary(fun=median,geom='crossbar',size=0.6,width=0.2)+
stat_compare_means(comparisons =list(c("<180 days","180-360 days"),c("<180 days",">=360 days"),c(">=360 days","180-360 days")),method = 'wilcox.test',size=4)+
coord_cartesian(ylim = c(min(alpha_diversity$chao1),max(alpha_diversity$chao1)*1.3))+
theme_bw()+xlab("")+ggtitle("Chao1")+ylab("")+format
p4 = ggplot(alpha_diversity, aes(x =Treatment_Duration, y = observed_species,fill=Treatment_Duration))+scale_fill_manual(values=color2)+
geom_boxplot(width=0.4) +
geom_point(position = position_jitter(0.1))+
stat_summary(fun=median,geom='crossbar',size=0.6,width=0.2)+
stat_compare_means(comparisons =list(c("<180 days","180-360 days"),c("<180 days",">=360 days"),c(">=360 days","180-360 days")),method = 'wilcox.test',size=4)+
coord_cartesian(ylim = c(min(alpha_diversity$observed_species),max(alpha_diversity$observed_species)*1.3))+
theme_bw()+xlab("")+ggtitle("Observed_species")+ylab("")+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text=element_text(size=12,colour="black"),text=element_text(size=12,colour="black"),
#axis.text.x = element_text(angle = 90, hjust = 1),
axis.title =element_text(size=12,colour="black"),plot.title = element_text(size = 12),
axis.ticks.x = element_blank(),
axis.text.x = element_blank(),
legend.text = element_text(size=12),
legend.title = element_text(size=12))
combined_plot = ggarrange(    p1,p2, p3,p4,
ncol = 4,widths  = c(0.45, 0.5, 0.55,0.85))
combined_plot
rm(list=ls())
library(ggplot2)
library(plyr)
library(ggpubr)
library(dplyr)
library(reshape2)
library(stringr)
group = read.csv("../Analysis/A01.1-add-meta/non-melanoma-cohort-sample_10_10.csv",check.names = F)
group = group[order(group$days.sample.collect),]
group = group[order(match(group$patient_rename,unique(group$patient_rename))),]
group = group[order(match(group$clinical.response,c("Responder","Nonresponder","Stable_Disease","Other"))),]
group = group[order(match(group$Tumor,unique(group$Tumor))),]
ID = unique(group$patient_rename)
rownames(group)=group$sample_id
first_sample = NULL
for(i in ID){
tmp = group[group$patient_rename == i,]
tmp = tmp[tmp$days.sample.collect == min(tmp$days.sample.collect),]
first_sample = rbind(first_sample,tmp)
}
first_sample = as.data.frame(first_sample[first_sample$days.sample.collect < 180,])
first_sample = first_sample[first_sample$Tumor == "SCC",]
squamous = group[group$Tumor == "SCC",]
squamous$time_group = NA
for (i in 1:nrow(squamous)){
if (squamous[i,"days.sample.collect"] < 180){
squamous[i,"time_group"] = "<180 days"
}
else if (squamous[i,"days.sample.collect"] >=180 & squamous[i,"days.sample.collect"]< 360){
squamous[i,"time_group"] = "180-360 days"
}
else if (squamous[i,"days.sample.collect"] >= 360){
squamous[i,"time_group"] = ">=360 days"
}}
color2 = c("#FC8002","#4995C6","#369F2D")
alpha_diversity=read.csv("../Analysis/A01.1-add-meta/jhmi-sears-non-melanoma.alpha-diversity.txt",sep="\t",row.names = 1,check.names = F)
res_squamous = squamous[squamous$clinical.response == "Responder",]
alpha_diversity=alpha_diversity[rownames(res_squamous),]
alpha_diversity$Treatment_Duration = factor(res_squamous$time_group,levels=c("<180 days","180-360 days",">=360 days"))
alpha_diversity$ICI_response = factor(res_squamous$clinical.response,c( "Responder","Nonresponder"))
format = theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text=element_text(size=12,colour="black"),text=element_text(size=12,colour="black"),
axis.title = element_text(size=12,colour="black"),plot.title = element_text(size = 12),
#axis.text.x = element_text(angle = 90, hjust = 1),
axis.ticks.x = element_blank(),legend.position = "none",
axis.text.x = element_blank())
p1 = ggplot(alpha_diversity, aes(x =Treatment_Duration, y = shannon,fill=Treatment_Duration))+scale_fill_manual(values=color2)+
geom_boxplot(width=0.4,show.legend = FALSE) +
geom_point(position = position_jitter(0.1))+
stat_summary(fun=median,geom='crossbar',size=0.6,width=0.2)+
stat_compare_means(comparisons =list(c("<180 days","180-360 days"),c("<180 days",">=360 days"),c(">=360 days","180-360 days")),method = 'wilcox.test',size=4)+
coord_cartesian(ylim = c(min(alpha_diversity$shannon),max(alpha_diversity$shannon)*1.3))+
theme_bw()+ggtitle("Shannon Index")+theme(axis.title.x = element_blank())+format+ylab("")
p2 = ggplot(alpha_diversity, aes(x =Treatment_Duration, y = simpson_reciprocal,fill=Treatment_Duration))+scale_fill_manual(values=color2)+
geom_boxplot(width=0.4,show.legend = FALSE) +
geom_point(position = position_jitter(0.1))+
stat_summary(fun=median,geom='crossbar',size=0.6,width=0.2)+
stat_compare_means(comparisons =list(c("<180 days","180-360 days"),c("<180 days",">=360 days"),c(">=360 days","180-360 days")),method = 'wilcox.test',size=4)+
coord_cartesian(ylim = c(min(alpha_diversity$simpson_reciprocal),max(alpha_diversity$simpson_reciprocal)*1.3))+
theme_bw()+ggtitle("Simpson_reciprocal")+theme(axis.title.x = element_blank(),axis.title.y = element_blank())+format
#ggsave(p2,file="./squamous/baseline_alpha_diversity_simpson_reciprocal.pdf", width=4, height=3.5)
p3 = ggplot(alpha_diversity, aes(x =Treatment_Duration, y = chao1,fill=Treatment_Duration))+scale_fill_manual(values=color2)+
geom_boxplot(width=0.4,show.legend = FALSE) +
geom_point(position = position_jitter(0.1))+
stat_summary(fun=median,geom='crossbar',size=0.6,width=0.2)+
stat_compare_means(comparisons =list(c("<180 days","180-360 days"),c("<180 days",">=360 days"),c(">=360 days","180-360 days")),method = 'wilcox.test',size=4)+
coord_cartesian(ylim = c(min(alpha_diversity$chao1),max(alpha_diversity$chao1)*1.3))+
theme_bw()+ggtitle("Chao1")+theme(axis.title.x = element_blank(),axis.title.y = element_blank())+format
#ggsave(p3,file="./squamous/baseline_alpha_diversity_chao1.pdf", width=4, height=3.5)
p4 = ggplot(alpha_diversity, aes(x =Treatment_Duration, y = observed_species,fill=Treatment_Duration))+scale_fill_manual(values=color2)+
geom_boxplot(width=0.4) +
geom_point(position = position_jitter(0.1))+
stat_summary(fun=median,geom='crossbar',size=0.6,width=0.2)+
stat_compare_means(comparisons =list(c("<180 days","180-360 days"),c("<180 days",">=360 days"),c(">=360 days","180-360 days")),method = 'wilcox.test',size=4)+
coord_cartesian(ylim = c(min(alpha_diversity$observed_species),max(alpha_diversity$observed_species)*1.3))+
theme_bw()+ggtitle("Observed_species")+theme(axis.title.x = element_blank(),axis.title.y = element_blank())+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),plot.title = element_text(size = 12),
axis.text=element_text(size=12,colour="black"),text=element_text(size=12,colour="black"),
#axis.text.x = element_text(angle = 90, hjust = 1),
axis.title =element_text(size=12,colour="black"),
axis.ticks.x = element_blank(),
axis.text.x = element_blank(),
legend.text = element_text(size=12),
legend.title = element_text(size=12))
#labels = "A"                                        # Labels of the scatter plot
combine = ggarrange(p1,p2, p3,p4,ncol = 4,widths  = c(1, 1, 1.1,2))
combine
rm(list=ls())
library(ggplot2)
library(vegan)
library(permute)
library(lattice)
library(plyr)
library(getopt)
library(ggfortify)
library(ade4)
library(dplyr)
library(reshape2)
group = read.csv("../Analysis/A01.1-add-meta/non-melanoma-cohort-sample_10_10.csv")
group = group[order(group$days.sample.collect),]
group = group[order(match(group$patient_rename,unique(group$patient_rename))),]
group = group[order(match(group$clinical.response,c("Responder","Nonresponder","Stable_Disease","Other"))),]
group = group[order(match(group$Tumor,unique(group$Tumor))),]
ID = unique(group$patient_rename)
rownames(group)=group$sample_id
first_sample = NULL
for(i in ID){
tmp = group[group$patient_rename == i,]
tmp = tmp[tmp$days.sample.collect == min(tmp$days.sample.collect),]
first_sample = rbind(first_sample,tmp)
}
first_sample = as.data.frame(first_sample[first_sample$days.sample.collect < 180,])
color=c("Responder" = "#A94643", "Nonresponder"="#3E4A7B","Stable_Disease"="#79ADD6","Other"="grey")
i="genus"
########
dat=read.csv(paste0("../Analysis/A01.1-add-meta/jhmi-sears-non-melanoma.",i,".txt"),sep="\t",row.names = 1,check.names = F)
dat=dat[rownames(first_sample),]
data=as.data.frame(dat[,10:ncol(dat)])
data=data[,which(colSums(data)>0.01)]
tab.dist<-vegdist(data,method="bray")
data$group = first_sample$clinical.response
set.seed(123)
data.adonis<- adonis2(tab.dist~group,data,permutations = 999)
pr = data.adonis$`Pr(>F)`[1]
pcoa<- dudi.pco(tab.dist, scan = FALSE,nf=10)
#$eig means how much is each component among 10 components
pcoa_eig <- (pcoa$eig)/ sum(pcoa$eig)
#get 10 components
plotdata <- data.frame({pcoa$li})
plotdata$names <- rownames(plotdata)
#name 10 components
names(plotdata)[1:3] <- c('PCoA1', 'PCoA2','PCoA3')
plotdata$response = as.factor(first_sample$clinical.response)
centroids <- aggregate(cbind(PCoA1,PCoA2)~response, data=plotdata, mean)
plotdata     <- merge(plotdata,centroids,by="response",suffixes=c("",".centroid"))
pcall <- ggplot(plotdata, aes(x=PCoA1,y=PCoA2,fill = response)) +
geom_point(aes(x=PCoA1,y=PCoA2,fill=response,color=response), size=4) +
geom_point(data=centroids, aes(x=PCoA1,y=PCoA2, fill=response,color=response), pch=21, size=2) +
geom_segment(aes(x=PCoA1.centroid, y=PCoA2.centroid, xend=PCoA1, yend=PCoA2, color=response), alpha=0.8) +
scale_fill_manual(values=color) +
scale_colour_manual(values=color) +
xlab(paste("PCoA Axis 1 (", round(100 * pcoa_eig[1], 2), "%)", sep="")) +
ylab(paste("PCoA Axis 2 (", round(100 * pcoa_eig[2], 2), "%)", sep="")) +
ggtitle("All Tumor")+
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.title = element_text(size=14,colour="black"),legend.position = "none",
axis.text=element_text(size=14,colour="black"),text=element_text(size=14,colour="black"),
aspect.ratio=1) +
guides(fill = guide_legend(override.aes=list(shape=21)))
#################################
dat=read.csv(paste0("../analysis/A01.1-add-meta/jhmi-sears-non-melanoma.",i,".txt"),sep="\t",row.names = 1,check.names = F)
first_sample_bcc = first_sample[first_sample$Tumor == "BCC",]
data=as.data.frame(dat[,10:ncol(dat)])
data=data[,which(colSums(data)>0.01)]
data=data[rownames(first_sample_bcc),]
tab.dist<-vegdist(data,method="bray")
data$group = first_sample_bcc$clinical.response
set.seed(123)
data.adonis<- adonis2(tab.dist~group,data,permutations = 999)
pr = data.adonis$`Pr(>F)`[1]
pcoa<- dudi.pco(tab.dist, scan = FALSE,nf=10)
#$eig means how much is each component among 10 components
pcoa_eig <- (pcoa$eig)/ sum(pcoa$eig)
#get 10 components
plotdata <- data.frame({pcoa$li})
plotdata$names <- rownames(plotdata)
#name 10 components
names(plotdata)[1:3] <- c('PCoA1', 'PCoA2','PCoA3')
plotdata$response = as.factor(first_sample_bcc$clinical.response)
centroids <- aggregate(cbind(PCoA1,PCoA2)~response, data=plotdata, mean)
plotdata     <- merge(plotdata,centroids,by="response",suffixes=c("",".centroid"))
pc1 <- ggplot(plotdata, aes(x=PCoA1,y=PCoA2,fill = response)) +
geom_point(aes(x=PCoA1,y=PCoA2,fill=response,color=response), size=4) +
geom_point(data=centroids, aes(x=PCoA1,y=PCoA2, fill=response,color=response), pch=21, size=2) +
geom_segment(aes(x=PCoA1.centroid, y=PCoA2.centroid, xend=PCoA1, yend=PCoA2, color=response), alpha=0.8) +
scale_fill_manual(values=color) +
scale_colour_manual(values=color) +
xlab(paste("PCoA Axis 1 (", round(100 * pcoa_eig[1], 2), "%)", sep="")) +
ylab(paste("PCoA Axis 2 (", round(100 * pcoa_eig[2], 2), "%)", sep="")) +
ggtitle("BCC")+
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.title = element_text(size=14,colour="black"),legend.position = "none",
axis.text=element_text(size=14,colour="black"),text=element_text(size=14,colour="black"),
aspect.ratio=1) +
guides(fill = guide_legend(override.aes=list(shape=21)))
##########################################
dat=read.csv(paste0("../analysis/A01.1-add-meta/jhmi-sears-non-melanoma.",i,".txt"),sep="\t",row.names = 1,check.names = F)
first_sample_mcc = first_sample[first_sample$Tumor == "MCC",]
data=as.data.frame(dat[,10:ncol(dat)])
data=data[,which(colSums(data)>0.01)]
data=data[rownames(first_sample_mcc),]
tab.dist<-vegdist(data,method="bray")
data$group = first_sample_mcc$clinical.response
set.seed(123)
data.adonis<- adonis2(tab.dist~group,data,permutations = 999)
pr = data.adonis$`Pr(>F)`[1]
pcoa<- dudi.pco(tab.dist, scan = FALSE,nf=10)
#$eig means how much is each component among 10 components
pcoa_eig <- (pcoa$eig)/ sum(pcoa$eig)
#get 10 components
plotdata <- data.frame({pcoa$li})
plotdata$names <- rownames(plotdata)
#name 10 components
names(plotdata)[1:3] <- c('PCoA1', 'PCoA2','PCoA3')
plotdata$response = as.factor(first_sample_mcc$clinical.response)
centroids <- aggregate(cbind(PCoA1,PCoA2)~response, data=plotdata, mean)
plotdata     <- merge(plotdata,centroids,by="response",suffixes=c("",".centroid"))
pc3 <- ggplot(plotdata, aes(x=PCoA1,y=PCoA2,fill = response)) +
geom_point(aes(x=PCoA1,y=PCoA2,fill=response,color=response), size=4) +
geom_point(data=centroids, aes(x=PCoA1,y=PCoA2, fill=response,color=response), pch=21, size=2) +
geom_segment(aes(x=PCoA1.centroid, y=PCoA2.centroid, xend=PCoA1, yend=PCoA2, color=response), alpha=0.8) +
scale_fill_manual(values=color) +
scale_colour_manual(values=color) +
xlab(paste("PCoA Axis 1 (", round(100 * pcoa_eig[1], 2), "%)", sep="")) +
ylab(paste("PCoA Axis 2 (", round(100 * pcoa_eig[2], 2), "%)", sep="")) +
ggtitle("MCC")+
theme_bw() +
theme(panel.grid.major = element_blank(),legend.position = "none",
panel.grid.minor = element_blank(),
plot.title = element_text(size=14,colour="black"),
axis.text=element_text(size=14,colour="black"),text=element_text(size=14,colour="black"),
aspect.ratio=1) +
guides(fill = guide_legend(override.aes=list(shape=21)))
##########################################
dat=read.csv(paste0("../analysis/A01.1-add-meta/jhmi-sears-non-melanoma.",i,".txt"),sep="\t",row.names = 1,check.names = F)
first_sample_scc = first_sample[first_sample$Tumor == "SCC",]
data=as.data.frame(dat[,10:ncol(dat)])
data=data[,which(colSums(data)>0.01)]
data=data[rownames(first_sample_scc),]
tab.dist<-vegdist(data,method="bray")
data$group = first_sample_scc$clinical.response
set.seed(123)
data.adonis<- adonis2(tab.dist~group,data,permutations = 999)
pr = data.adonis$`Pr(>F)`[1]
pcoa<- dudi.pco(tab.dist, scan = FALSE,nf=10)
#$eig means how much is each component among 10 components
pcoa_eig <- (pcoa$eig)/ sum(pcoa$eig)
#get 10 components
plotdata <- data.frame({pcoa$li})
plotdata$names <- rownames(plotdata)
#name 10 components
names(plotdata)[1:3] <- c('PCoA1', 'PCoA2','PCoA3')
plotdata$response = as.factor(first_sample_scc$clinical.response)
centroids <- aggregate(cbind(PCoA1,PCoA2)~response, data=plotdata, mean)
plotdata     <- merge(plotdata,centroids,by="response",suffixes=c("",".centroid"))
pc2 <- ggplot(plotdata, aes(x=PCoA1,y=PCoA2,fill = response)) +
geom_point(aes(x=PCoA1,y=PCoA2,fill=response,color=response), size=4) +
geom_point(data=centroids, aes(x=PCoA1,y=PCoA2, fill=response,color=response), pch=21, size=2) +
geom_segment(aes(x=PCoA1.centroid, y=PCoA2.centroid, xend=PCoA1, yend=PCoA2, color=response), alpha=0.8) +
scale_fill_manual(values=color) +
scale_colour_manual(values=color) +
xlab(paste("PCoA Axis 1 (", round(100 * pcoa_eig[1], 2), "%)", sep="")) +
ylab(paste("PCoA Axis 2 (", round(100 * pcoa_eig[2], 2), "%)", sep="")) +
ggtitle("CSCC")+
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.title = element_text(size=14,colour="black"),
axis.text=element_text(size=14,colour="black"),text=element_text(size=14,colour="black"),
aspect.ratio=1) +
guides(fill = guide_legend(override.aes=list(shape=21)))
supplement = ggarrange(pcall,pc1,pc3,pc2,nrow = 1,ncol =4,widths=c(1,1,1,1.48) )
supplement
