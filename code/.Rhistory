theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.title = element_text(size=14,colour="black"),legend.position = "none",
axis.text=element_text(size=14,colour="black"),text=element_text(size=14,colour="black"),
aspect.ratio=1) +
guides(fill = guide_legend(override.aes=list(shape=21)))
##########################################
dat=read.csv(paste0("../analysis/A01.1-add-meta/jhmi-sears-non-melanoma.",i,".txt"),sep="\t",row.names = 1,check.names = F)
first_sample_mcc = first_sample[first_sample$Tumor == "MCC",]
data=as.data.frame(dat[,10:ncol(dat)])
data=data[,which(colSums(data)>0.01)]
data=data[rownames(first_sample_mcc),]
tab.dist<-vegdist(data,method="bray")
data$group = first_sample_mcc$clinical.response
set.seed(123)
data.adonis<- adonis2(tab.dist~group,data,permutations = 999)
pr = data.adonis$`Pr(>F)`[1]
pcoa<- dudi.pco(tab.dist, scan = FALSE,nf=10)
#$eig means how much is each component among 10 components
pcoa_eig <- (pcoa$eig)/ sum(pcoa$eig)
#get 10 components
plotdata <- data.frame({pcoa$li})
plotdata$names <- rownames(plotdata)
#name 10 components
names(plotdata)[1:3] <- c('PCoA1', 'PCoA2','PCoA3')
plotdata$response = as.factor(first_sample_mcc$clinical.response)
centroids <- aggregate(cbind(PCoA1,PCoA2)~response, data=plotdata, mean)
plotdata     <- merge(plotdata,centroids,by="response",suffixes=c("",".centroid"))
pc3 <- ggplot(plotdata, aes(x=PCoA1,y=PCoA2,fill = response)) +
geom_point(aes(x=PCoA1,y=PCoA2,fill=response,color=response), size=4) +
geom_point(data=centroids, aes(x=PCoA1,y=PCoA2, fill=response,color=response), pch=21, size=2) +
geom_segment(aes(x=PCoA1.centroid, y=PCoA2.centroid, xend=PCoA1, yend=PCoA2, color=response), alpha=0.8) +
scale_fill_manual(values=color) +
scale_colour_manual(values=color) +
xlab(paste("PCoA Axis 1 (", round(100 * pcoa_eig[1], 2), "%)", sep="")) +
ylab(paste("PCoA Axis 2 (", round(100 * pcoa_eig[2], 2), "%)", sep="")) +
ggtitle("MCC")+
theme_bw() +
theme(panel.grid.major = element_blank(),legend.position = "none",
panel.grid.minor = element_blank(),
plot.title = element_text(size=14,colour="black"),
axis.text=element_text(size=14,colour="black"),text=element_text(size=14,colour="black"),
aspect.ratio=1) +
guides(fill = guide_legend(override.aes=list(shape=21)))
##########################################
dat=read.csv(paste0("../analysis/A01.1-add-meta/jhmi-sears-non-melanoma.",i,".txt"),sep="\t",row.names = 1,check.names = F)
first_sample_scc = first_sample[first_sample$Tumor == "SCC",]
data=as.data.frame(dat[,10:ncol(dat)])
data=data[,which(colSums(data)>0.01)]
data=data[rownames(first_sample_scc),]
tab.dist<-vegdist(data,method="bray")
data$group = first_sample_scc$clinical.response
set.seed(123)
data.adonis<- adonis2(tab.dist~group,data,permutations = 999)
pr = data.adonis$`Pr(>F)`[1]
pcoa<- dudi.pco(tab.dist, scan = FALSE,nf=10)
#$eig means how much is each component among 10 components
pcoa_eig <- (pcoa$eig)/ sum(pcoa$eig)
#get 10 components
plotdata <- data.frame({pcoa$li})
plotdata$names <- rownames(plotdata)
#name 10 components
names(plotdata)[1:3] <- c('PCoA1', 'PCoA2','PCoA3')
plotdata$response = as.factor(first_sample_scc$clinical.response)
centroids <- aggregate(cbind(PCoA1,PCoA2)~response, data=plotdata, mean)
plotdata     <- merge(plotdata,centroids,by="response",suffixes=c("",".centroid"))
pc2 <- ggplot(plotdata, aes(x=PCoA1,y=PCoA2,fill = response)) +
geom_point(aes(x=PCoA1,y=PCoA2,fill=response,color=response), size=4) +
geom_point(data=centroids, aes(x=PCoA1,y=PCoA2, fill=response,color=response), pch=21, size=2) +
geom_segment(aes(x=PCoA1.centroid, y=PCoA2.centroid, xend=PCoA1, yend=PCoA2, color=response), alpha=0.8) +
scale_fill_manual(values=color) +
scale_colour_manual(values=color) +
xlab(paste("PCoA Axis 1 (", round(100 * pcoa_eig[1], 2), "%)", sep="")) +
ylab(paste("PCoA Axis 2 (", round(100 * pcoa_eig[2], 2), "%)", sep="")) +
ggtitle(paste0("SCC p = ",round(pr,2)," R=",round(data.adonis$R2[2]*100,1),"%"))+
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.title = element_text(size=14,colour="black"),
axis.text=element_text(size=14,colour="black"),text=element_text(size=14,colour="black"),
aspect.ratio=1) +
guides(fill = guide_legend(override.aes=list(shape=21)))
supplement = ggarrange(pcall,pc1,pc3,pc2,nrow = 1,ncol =4,widths=c(1,1,1,1.48) )
supplement
View(plotdata)
group = read.csv("../analysis/A01.1-add-meta/non-melanoma-cohort-sample_10_10.csv")
group = group[order(group$days.sample.collect),]
group = group[order(match(group$patient_rename,unique(group$patient_rename))),]
group = group[order(match(group$clinical.response,c("Responder","Nonresponder","Stable_Disease","Other"))),]
group = group[order(match(group$Tumor,unique(group$Tumor))),]
ID = unique(group$patient_rename)
rownames(group)=group$sample_id
first_sample = NULL
for(i in ID){
tmp = group[group$patient_rename == i,]
tmp = tmp[tmp$days.sample.collect == min(tmp$days.sample.collect),]
first_sample = rbind(first_sample,tmp)
}
first_sample = as.data.frame(first_sample[first_sample$days.sample.collect < 180,])
color=c("Responder" = "#A94643", "Nonresponder"="#3E4A7B","Stable_Disease"="#79ADD6","Other"="grey")
i="genus"
########
dat=read.csv(paste0("../analysis/A01.1-add-meta/jhmi-sears-non-melanoma.",i,".txt"),sep="\t",row.names = 1,check.names = F)
dat=dat[rownames(first_sample),]
data=as.data.frame(dat[,10:ncol(dat)])
data=data[,which(colSums(data)>0.01)]
tab.dist<-vegdist(data,method="bray")
data$group = first_sample$clinical.response
set.seed(123)
data.adonis<- adonis2(tab.dist~group,data,permutations = 999)
pr = data.adonis$`Pr(>F)`[1]
pcoa<- dudi.pco(tab.dist, scan = FALSE,nf=10)
#$eig means how much is each component among 10 components
pcoa_eig <- (pcoa$eig)/ sum(pcoa$eig)
#get 10 components
plotdata <- data.frame({pcoa$li})
plotdata$names <- rownames(plotdata)
#name 10 components
names(plotdata)[1:3] <- c('PCoA1', 'PCoA2','PCoA3')
plotdata$response = as.factor(first_sample$clinical.response)
centroids <- aggregate(cbind(PCoA1,PCoA2)~response, data=plotdata, mean)
plotdata     <- merge(plotdata,centroids,by="response",suffixes=c("",".centroid"))
pcall <- ggplot(plotdata, aes(x=PCoA1,y=PCoA2,fill = response)) +
geom_point(aes(x=PCoA1,y=PCoA2,fill=response,color=response), size=4) +
geom_point(data=centroids, aes(x=PCoA1,y=PCoA2, fill=response,color=response), pch=21, size=2) +
geom_segment(aes(x=PCoA1.centroid, y=PCoA2.centroid, xend=PCoA1, yend=PCoA2, color=response), alpha=0.8) +
scale_fill_manual(values=color) +
scale_colour_manual(values=color) +
xlab(paste("PCoA Axis 1 (", round(100 * pcoa_eig[1], 2), "%)", sep="")) +
ylab(paste("PCoA Axis 2 (", round(100 * pcoa_eig[2], 2), "%)", sep="")) +
ggtitle(paste0("All Tumor p = ",round(pr,2)," R=",round(data.adonis$R2[2]*100,1),"%"))+
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.title = element_text(size=14,colour="black"),legend.position = "none",
axis.text=element_text(size=14,colour="black"),text=element_text(size=14,colour="black"),
aspect.ratio=1) +
guides(fill = guide_legend(override.aes=list(shape=21)))
View(plotdata)
rm(list=ls())
library(ggplot2)
library(vegan)
library(permute)
library(lattice)
library(plyr)
library(getopt)
library(ggfortify)
library(ade4)
library(ggpubr)
library(pheatmap)
library(cowplot)
color=c("#A94643","#3E4A7B","#BCBDB8")
rm(list=ls())
library(ggplot2)
library(vegan)
library(permute)
library(lattice)
library(plyr)
library(getopt)
library(ggfortify)
library(ade4)
library(ggpubr)
library(pheatmap)
library(cowplot)
library(reshape2)
color=c("#A94643","#3E4A7B","#BCBDB8")
group = read.csv("../analysis/A01.1-add-meta/non-melanoma-cohort-sample_10_10.csv",check.names = F)
group = group[order(group$days.sample.collect),]
group = group[order(match(group$patient_rename,unique(group$patient_rename))),]
group = group[order(match(group$clinical.response,c("Responder","Nonresponder","Stable_Disease","Other"))),]
group = group[order(match(group$Tumor,unique(group$Tumor))),]
ID = unique(group$patient_rename)
rownames(group)=group$sample_id
first_sample = NULL
for(i in ID){
tmp = group[group$patient_rename == i,]
tmp = tmp[tmp$days.sample.collect == min(tmp$days.sample.collect),]
first_sample = rbind(first_sample,tmp)
}
first_sample = as.data.frame(first_sample[first_sample$days.sample.collect < 180,])
first_sample = first_sample[first_sample$Tumor == "SCC",]
squamous = group[group$Tumor == "SCC",]
squamous$time_group = NA
for (i in 1:nrow(squamous)){
if (squamous[i,"days.sample.collect"] < 180){
squamous[i,"time_group"] = "<180 days"
}
else if (squamous[i,"days.sample.collect"] >=180 & squamous[i,"days.sample.collect"]< 360){
squamous[i,"time_group"] = "180-360 days"
}
else if (squamous[i,"days.sample.collect"] >= 360){
squamous[i,"time_group"] = ">=360 days"
}}
color2 = c("#FC8002","#4995C6","#369F2D")
alpha_diversity=read.csv("../analysis/A01.1-add-meta/jhmi-sears-non-melanoma.alpha-diversity.txt",sep="\t",row.names = 1,check.names = F)
res_squamous = squamous[squamous$clinical.response == "Responder",]
alpha_diversity=alpha_diversity[rownames(res_squamous),]
alpha_diversity$Treatment_Duration = factor(res_squamous$time_group,levels=c("<180 days","180-360 days",">=360 days"))
alpha_diversity$ICI_response = factor(res_squamous$clinical.response,c( "Responder","Nonresponder"))
format = theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text=element_text(size=12,colour="black"),text=element_text(size=12,colour="black"),
axis.title = element_text(size=12,colour="black"),plot.title = element_text(size = 12),
#axis.text.x = element_text(angle = 90, hjust = 1),
axis.ticks.x = element_blank(),legend.position = "none",
axis.text.x = element_blank())
p1 = ggplot(alpha_diversity, aes(x =Treatment_Duration, y = shannon,fill=Treatment_Duration))+scale_fill_manual(values=color2)+
geom_boxplot(width=0.4,show.legend = FALSE) +
geom_point(position = position_jitter(0.1))+
stat_summary(fun=median,geom='crossbar',size=0.6,width=0.2)+
stat_compare_means(comparisons =list(c("<180 days","180-360 days"),c("<180 days",">=360 days"),c(">=360 days","180-360 days")),method = 'wilcox.test',size=4)+
coord_cartesian(ylim = c(min(alpha_diversity$shannon),max(alpha_diversity$shannon)*1.3))+
theme_bw()+ggtitle("Shannon Index")+theme(axis.title.x = element_blank())+format+ylab("")
p2 = ggplot(alpha_diversity, aes(x =Treatment_Duration, y = simpson_reciprocal,fill=Treatment_Duration))+scale_fill_manual(values=color2)+
geom_boxplot(width=0.4,show.legend = FALSE) +
geom_point(position = position_jitter(0.1))+
stat_summary(fun=median,geom='crossbar',size=0.6,width=0.2)+
stat_compare_means(comparisons =list(c("<180 days","180-360 days"),c("<180 days",">=360 days"),c(">=360 days","180-360 days")),method = 'wilcox.test',size=4)+
coord_cartesian(ylim = c(min(alpha_diversity$simpson_reciprocal),max(alpha_diversity$simpson_reciprocal)*1.3))+
theme_bw()+ggtitle("Simpson_reciprocal")+theme(axis.title.x = element_blank(),axis.title.y = element_blank())+format
#ggsave(p2,file="./squamous/baseline_alpha_diversity_simpson_reciprocal.pdf", width=4, height=3.5)
p3 = ggplot(alpha_diversity, aes(x =Treatment_Duration, y = chao1,fill=Treatment_Duration))+scale_fill_manual(values=color2)+
geom_boxplot(width=0.4,show.legend = FALSE) +
geom_point(position = position_jitter(0.1))+
stat_summary(fun=median,geom='crossbar',size=0.6,width=0.2)+
stat_compare_means(comparisons =list(c("<180 days","180-360 days"),c("<180 days",">=360 days"),c(">=360 days","180-360 days")),method = 'wilcox.test',size=4)+
coord_cartesian(ylim = c(min(alpha_diversity$chao1),max(alpha_diversity$chao1)*1.3))+
theme_bw()+ggtitle("Chao1")+theme(axis.title.x = element_blank(),axis.title.y = element_blank())+format
#ggsave(p3,file="./squamous/baseline_alpha_diversity_chao1.pdf", width=4, height=3.5)
p4 = ggplot(alpha_diversity, aes(x =Treatment_Duration, y = observed_species,fill=Treatment_Duration))+scale_fill_manual(values=color2)+
geom_boxplot(width=0.4) +
geom_point(position = position_jitter(0.1))+
stat_summary(fun=median,geom='crossbar',size=0.6,width=0.2)+
stat_compare_means(comparisons =list(c("<180 days","180-360 days"),c("<180 days",">=360 days"),c(">=360 days","180-360 days")),method = 'wilcox.test',size=4)+
coord_cartesian(ylim = c(min(alpha_diversity$observed_species),max(alpha_diversity$observed_species)*1.3))+
theme_bw()+ggtitle("Observed_species")+theme(axis.title.x = element_blank(),axis.title.y = element_blank())+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),plot.title = element_text(size = 12),
axis.text=element_text(size=12,colour="black"),text=element_text(size=12,colour="black"),
#axis.text.x = element_text(angle = 90, hjust = 1),
axis.title =element_text(size=12,colour="black"),
axis.ticks.x = element_blank(),
axis.text.x = element_blank(),
legend.text = element_text(size=12),
legend.title = element_text(size=12))
#labels = "A"                                        # Labels of the scatter plot
View(alpha_diversity)
length(unique(alpha_diversity$record.id))
# load libraries
rm(list=ls())
library(gtsummary)
library(dplyr)
# load data
dat = read.csv("../analysis/A01.1-add-meta/non-melanoma-cohort-sample_10_10.csv",check.names = F)
dat_patient = as.data.frame(dat[,colnames(dat) %in% c("patient_rename","Age_IO","Tumor","Sex","clinical.response","IO.enrollment")])
patient_sample = NULL
for (i in unique(dat_patient$patient_rename)){
tmp = dat_patient[dat_patient$patient_rename == i,]
n = nrow(tmp)
tmp = data.frame(distinct(tmp))
tmp[7] = n
patient_sample = rbind(patient_sample, tmp)
}
colnames(patient_sample) = c(colnames(patient_sample)[-length(colnames(patient_sample))],"Number.of.samples")
patient_sample$Number.of.samples = as.numeric(patient_sample$Number.of.samples)
patient_sample = patient_sample %>% mutate(IO.drug = case_when(
IO.enrollment == "Cemiplimab" ~ "Cemiplimab(anti-PD1/PDL1)",
IO.enrollment == "Pembrolizumab" ~ "Pembrolizumab(anti-PD1/PDL1)",
IO.enrollment == "Nivolumab" ~ "Nivolumab(anti-PD1/PDL1)",
IO.enrollment == "Avelumab" ~ "Avelumab(anti-PD1/PDL1)",
IO.enrollment == "Nivolumab + Ipilimumab" ~ "Nivolumab(anti-PD1/PDL1)+Ipilimumab(anti-CTLA4)"
))
patient_sample$IO.drug = factor(patient_sample$IO.drug,
levels= c("Cemiplimab(anti-PD1/PDL1)","Pembrolizumab(anti-PD1/PDL1)",
"Nivolumab(anti-PD1/PDL1)" ,"Avelumab(anti-PD1/PDL1)", "Nivolumab(anti-PD1/PDL1)+Ipilimumab(anti-CTLA4)"))
patient_sample = patient_sample %>% mutate(Response = case_when(
clinical.response == "Responder" ~ "Responder/R",
clinical.response == "Stable_Disease" ~ "Stable_Disease/SD",
clinical.response == "Nonresponder" ~ "Nonresponder/NR",
clinical.response == "Other" ~ "Other (radiotherapy, organ transplant, unevaluable)",
))
patient_sample$Response = factor(patient_sample$Response,levels = c("Responder/R","Nonresponder/NR",
"Stable_Disease/SD","Other (radiotherapy, organ transplant, unevaluable)"))
tbl.gts <- patient_sample %>%
# categorical variables must be factors or character strings
# apply the tbl_summary() function
tbl_summary(
by = Tumor, # Treatment variable
label = list(
Age_IO ~ "Age [yrs] (sd)",
Sex ~ "Sex (%)",
IO.drug ~ "Treatment (%)",
Response ~ "ICI Response (%)",
Number.of.samples ~ "Total Fecal Samples"
),
type = c(Age_IO,Number.of.samples) ~ "continuous",
statistic = list(Age_IO ~ "{mean} ({sd})",Number.of.samples~"{sum}"),
# may be also ...
# statistic = list(all_continuous() ~ "{median} ({p25}, {p75})"),
digits = all_continuous() ~ 0,
missing_text = "(Missing)",
include = c("Age_IO","Sex","Tumor","IO.drug","Response","Number.of.samples"))%>%
as_gt() %>%
gt::gtsave(filename ="../analysis/Graph/cohort_summary.docx")
rm(list=ls())
library(ggplot2)
library(vegan)
library(permute)
library(lattice)
library(plyr)
library(getopt)
library(ggfortify)
library(ade4)
library(ggpubr)
library(pheatmap)
library(cowplot)
library(reshape2)
color=c("#A94643","#3E4A7B","#BCBDB8")
group = read.csv("../analysis/A01.1-add-meta/non-melanoma-cohort-sample_10_10.csv",check.names = F)
group = group[order(group$days.sample.collect),]
group = group[order(match(group$patient_rename,unique(group$patient_rename))),]
group = group[order(match(group$clinical.response,c("Responder","Nonresponder","Stable_Disease","Other"))),]
group = group[order(match(group$Tumor,unique(group$Tumor))),]
ID = unique(group$patient_rename)
rownames(group)=group$sample_id
first_sample = NULL
for(i in ID){
tmp = group[group$patient_rename == i,]
tmp = tmp[tmp$days.sample.collect == min(tmp$days.sample.collect),]
first_sample = rbind(first_sample,tmp)
}
first_sample = as.data.frame(first_sample[first_sample$days.sample.collect < 180,])
first_sample = first_sample[first_sample$Tumor == "SCC",]
squamous = group[group$Tumor == "SCC",]
squamous$time_group = NA
for (i in 1:nrow(squamous)){
if (squamous[i,"days.sample.collect"] < 180){
squamous[i,"time_group"] = "<180 days"
}
else if (squamous[i,"days.sample.collect"] >=180 & squamous[i,"days.sample.collect"]< 360){
squamous[i,"time_group"] = "180-360 days"
}
else if (squamous[i,"days.sample.collect"] >= 360){
squamous[i,"time_group"] = ">=360 days"
}}
color2 = c("#FC8002","#4995C6","#369F2D")
alpha_diversity=read.csv("../analysis/A01.1-add-meta/jhmi-sears-non-melanoma.alpha-diversity.txt",sep="\t",row.names = 1,check.names = F)
res_squamous = squamous[squamous$clinical.response == "Responder",]
alpha_diversity=alpha_diversity[rownames(res_squamous),]
alpha_diversity$Treatment_Duration = factor(res_squamous$time_group,levels=c("<180 days","180-360 days",">=360 days"))
alpha_diversity$ICI_response = factor(res_squamous$clinical.response,c( "Responder","Nonresponder"))
format = theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text=element_text(size=12,colour="black"),text=element_text(size=12,colour="black"),
axis.title = element_text(size=12,colour="black"),plot.title = element_text(size = 12),
#axis.text.x = element_text(angle = 90, hjust = 1),
axis.ticks.x = element_blank(),legend.position = "none",
axis.text.x = element_blank())
View(first_sample)
rm(list=ls())
library(ggplot2)
library(vegan)
library(permute)
library(lattice)
library(plyr)
library(getopt)
library(ggfortify)
library(ade4)
library(ggpubr)
library(swimplot)
library(dplyr)
library(reshape2)
library(ggsurvfit)
library(dplyr)
library(survival)
library(gtsummary)
library(tidycmprsk)
library(ggrepel)
library(pheatmap)
library(cowplot)
group = read.csv("../analysis/A01.1-add-meta/non-melanoma-cohort-sample_10_10.csv",row.names = 1)
group = group[group$clinical.response %in% c("Responder","Nonresponder"),]
group$time_group = NA
for (i in 1:nrow(group)){
if (group[i,"days.sample.collect"] < 180){
group[i,"time_group"] = "<180 days"
}
else if (group[i,"days.sample.collect"] >=180 & group[i,"days.sample.collect"]< 360){
group[i,"time_group"] = "180-360 days"
}
else if (group[i,"days.sample.collect"] >= 360){
group[i,"time_group"] = ">=360 days"
}}
color2 = c("#FC8002","#4995C6","#369F2D")
alpha_diversity=read.csv("../analysis/A01.1-add-meta/jhmi-sears-non-melanoma.alpha-diversity.txt",sep="\t",row.names = 1,check.names = F)
clinical_benefit_group = group[group$clinical.response == "Responder",]
alpha_diversity=alpha_diversity[rownames(clinical_benefit_group),]
alpha_diversity$Treatment_Duration = factor(clinical_benefit_group$time_group,levels=c("<180 days","180-360 days",">=360 days"))
alpha_diversity$ICI_response = factor(clinical_benefit_group$clinical.response)
format = theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text=element_text(size=12,colour="black"),text=element_text(size=12,colour="black"),
axis.title = element_text(size=12,colour="black"),plot.title = element_text(size = 12),
#axis.text.x = element_text(angle = 90, hjust = 1),
axis.ticks.x = element_blank(),legend.position = "none",
axis.text.x = element_blank())
p1 = ggplot(alpha_diversity, aes(x =Treatment_Duration, y = shannon,fill=Treatment_Duration))+scale_fill_manual(values=color2)+
geom_boxplot(width=0.4,show.legend = FALSE) +
#geom_point(position = position_jitter(0.1),aes(shape=ICI_response))scale_shape_manual(values = c(19,1))+
geom_point(position = position_jitter(0.1))+
stat_summary(fun=median,geom='crossbar',size=0.6,width=0.2)+
stat_compare_means(comparisons =list(c("<180 days","180-360 days"),c("<180 days",">=360 days"),c(">=360 days","180-360 days")),method = 'wilcox.test',size=4)+
coord_cartesian(ylim = c(min(alpha_diversity$shannon),max(alpha_diversity$shannon)*1.3))+
theme_bw()+xlab("")+ggtitle("Shannon Index")+ylab("")+format
p2 = ggplot(alpha_diversity, aes(x =Treatment_Duration, y = simpson_reciprocal,fill=Treatment_Duration))+scale_fill_manual(values=color2)+
geom_boxplot(width=0.4,show.legend = FALSE) +
geom_point(position = position_jitter(0.1))+
stat_summary(fun=median,geom='crossbar',size=0.6,width=0.2)+
stat_compare_means(comparisons =list(c("<180 days","180-360 days"),c("<180 days",">=360 days"),c(">=360 days","180-360 days")),method = 'wilcox.test',size=4)+
coord_cartesian(ylim = c(min(alpha_diversity$simpson_reciprocal),max(alpha_diversity$simpson_reciprocal)*1.3))+
theme_bw()+xlab("")+ggtitle("Simpson_reciprocal")+ylab("")+format
#ggsave(p2,file="./squamous/baseline_alpha_diversity_simpson_reciprocal.pdf", width=4, height=3.5)
p3 = ggplot(alpha_diversity, aes(x =Treatment_Duration, y = chao1,fill=Treatment_Duration))+scale_fill_manual(values=color2)+
geom_boxplot(width=0.4,show.legend = FALSE) +
geom_point(position = position_jitter(0.1))+
stat_summary(fun=median,geom='crossbar',size=0.6,width=0.2)+
stat_compare_means(comparisons =list(c("<180 days","180-360 days"),c("<180 days",">=360 days"),c(">=360 days","180-360 days")),method = 'wilcox.test',size=4)+
coord_cartesian(ylim = c(min(alpha_diversity$chao1),max(alpha_diversity$chao1)*1.3))+
theme_bw()+xlab("")+ggtitle("Chao1")+ylab("")+format
#ggsave(p3,file="./squamous/baseline_alpha_diversity_chao1.pdf", width=4, height=3.5)
p4 = ggplot(alpha_diversity, aes(x =Treatment_Duration, y = observed_species,fill=Treatment_Duration))+scale_fill_manual(values=color2)+
geom_boxplot(width=0.4) +
geom_point(position = position_jitter(0.1))+
stat_summary(fun=median,geom='crossbar',size=0.6,width=0.2)+
stat_compare_means(comparisons =list(c("<180 days","180-360 days"),c("<180 days",">=360 days"),c(">=360 days","180-360 days")),method = 'wilcox.test',size=4)+
coord_cartesian(ylim = c(min(alpha_diversity$observed_species),max(alpha_diversity$observed_species)*1.3))+
theme_bw()+xlab("")+ggtitle("Observed_species")+ylab("")+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text=element_text(size=12,colour="black"),text=element_text(size=12,colour="black"),
#axis.text.x = element_text(angle = 90, hjust = 1),
axis.title =element_text(size=12,colour="black"),plot.title = element_text(size = 12),
axis.ticks.x = element_blank(),
axis.text.x = element_blank(),
legend.text = element_text(size=12),
legend.title = element_text(size=12))
combined_plot = ggarrange(    p1,p2, p3,p4,
ncol = 4,widths  = c(0.45, 0.5, 0.55,0.85))
#ggsave(combined_plot,file="../analysis/Graph/FigS1.pdf",height = 6,width = 15)
combined_plot
rm(list=ls())
library(ggplot2)
library(vegan)
library(permute)
library(lattice)
library(plyr)
library(getopt)
library(ggfortify)
library(ade4)
library(ggpubr)
library(swimplot)
library(dplyr)
library(reshape2)
library(ggsurvfit)
library(dplyr)
library(survival)
library(gtsummary)
library(tidycmprsk)
library(ggrepel)
library(pheatmap)
library(cowplot)
group = read.csv("../analysis/A01.1-add-meta/non-melanoma-cohort-sample_10_10.csv",check.names = F)
group = group[order(group$days.sample.collect),]
group = group[order(match(group$patient_rename,unique(group$patient_rename))),]
group = group[order(match(group$Tumor,unique(group$Tumor))),]
rownames(group) = group$sample_id
group = as.data.frame(group)
dat=read.csv(paste0("../analysis/A01.1-add-meta/jhmi-sears-non-melanoma.genus.txt"),sep="\t",row.names = 1,check.names = F)
dat=as.data.frame(dat[,10:ncol(dat)])
dat=dat[,which(colSums(dat)>0.01)]
cal_sample_distance = function(group,data,value){
tmp = group[group$clinical.response == value,]
tmp_dat=dat[rownames(tmp),]
tab.dist<-vegdist(tmp_dat,method="bray")
mat = as.matrix(tab.dist)
mat_long = subset(melt(mat), value!=0)
for (i in rownames(mat_long)){
if (tmp[mat_long[i,"Var1"],"patient"] == tmp[mat_long[i,"Var2"],"patient"]){
mat_long[i,"group"] = "within_patient"
}else{
mat_long[i,"group"] = "across_patient"
}
}
mat_long$response = value
return(mat_long)
}
nonres = cal_sample_distance(group,data,"Nonresponder")
res = cal_sample_distance(group,data,"Responder")
other = cal_sample_distance(group,data,"Other")
sd =  cal_sample_distance(group,data,"Stable_Disease")
mat_long = as.data.frame(rbind(nonres,res,other,sd))
mat_long$group = factor(mat_long$group,level= c("within_patient","across_patient"))
color = c("within_patient"="#ADDB88","across_patient" ="#369F2D")
group = read.csv("../analysis/A01.1-add-meta/non-melanoma-cohort-sample_10_10.csv",check.names = F)
group = group[order(group$days.sample.collect),]
group = group[order(match(group$patient_rename,unique(group$patient_rename))),]
group = group[order(match(group$Tumor,unique(group$Tumor))),]
rownames(group) = group$sample_id
group = as.data.frame(group)
View(group)
count(group$clinical.response)
group %>% count(clinical.response)
